syntax = "proto3";

package envoy.config.listener.v3;

import "envoy/config/core/v3/extension.proto";

import "google/protobuf/any.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/wrappers.proto";

import "udpa/annotations/status.proto";
import "udpa/annotations/versioning.proto";
import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.config.listener.v3";
option java_outer_classname = "UdpListenerConfigProto";
option java_multiple_files = true;
option (udpa.annotations.file_status).package_version_status = ACTIVE;

// [#protodoc-title: UDP Listener Config]
// Listener :ref:`configuration overview <config_listeners>`

// [#next-free-field: 6]
message UdpListenerConfig {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.api.v2.listener.UdpListenerConfig";

  // Used to look up UDP listener factory, matches "raw_udp_listener" or
  // "quic_listener" to create a specific udp listener.
  // If not specified, treat as "raw_udp_listener".
  string udp_listener_name = 1;

  // Used to create a specific listener factory. To some factory, e.g.
  // "raw_udp_listener", config is not needed.
  // [#extension-category: envoy.filters.udp_listener]
  oneof config_type {
    google.protobuf.Any typed_config = 3;

    google.protobuf.Struct hidden_envoy_deprecated_config = 2 [deprecated = true];
  }

  // The maximum size of received downstream UDP datagrams. Using a larger size will cause Envoy to allocate
  // more memory per listener. Received datagrams above this size will be dropped. If not set
  // defaults to 1500 bytes.
  google.protobuf.UInt64Value max_downstream_rx_datagram_size = 4
      [(validate.rules).uint64 = {lte: 65536}];

  // If the protocol in the listener socket address in :ref:`protocol
  // <envoy_api_field_config.core.v3.SocketAddress.protocol>` is :ref:`UDP
  // <envoy_api_enum_value_config.core.v3.SocketAddress.Protocol.UDP>`, this field specifies the
  // actual UDP writer to create. If not specified the default UDP writer is used.
  // [#comment:#extension-category: envoy.udp_packet_writers]
  // [#not-implemented-hide:]
  // [#comment:TODO(mattklein123): Consider removing this as an extension point.]
  core.v3.TypedExtensionConfig writer_config = 5;
}

message ActiveRawUdpListenerConfig {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.api.v2.listener.ActiveRawUdpListenerConfig";
}
